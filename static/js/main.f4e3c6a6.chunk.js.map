{"version":3,"sources":["img/karate.png","img/me.png","img/instagram.svg","img/linkedin.svg","components/header.jsx","components/projects.jsx","components/frontPage.jsx","components/navbar.jsx","components/about.jsx","components/footer.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","src","me","alt","href","target","rel","instagram","linkedin","Projects","title","tags","description","img","pack","url","github","map","e","style","backgroundColor","display","FrontPage","state","projects","packages","karate","this","Component","Navbar","to","About","color","Footer","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f4e3c6a6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/karate.5a7b7a14.png\";","module.exports = __webpack_public_path__ + \"static/media/me.c49b8133.png\";","module.exports = __webpack_public_path__ + \"static/media/instagram.d0588c84.svg\";","module.exports = __webpack_public_path__ + \"static/media/linkedin.715db17a.svg\";","import React from 'react'\r\nimport me from '../img/me.png'\r\nimport instagram from '../img/instagram.svg'\r\nimport linkedin from '../img/linkedin.svg'\r\nexport const Header = () => {\r\nreturn (\r\n    <header className='header'>\r\n        <img src={me} alt=\"me\"/>\r\n        <div>\r\n            <h1> Hi i'm Luis </h1>\r\n            <h2> Full Stack Web Developer </h2>\r\n            <p> Specialized in <b>React</b> and <b>Node</b>  </p>\r\n\r\n            <section>\r\n                <a href=\"https://www.instagram.com/luisleopardi_nano/\" target='_blank' rel=\"noopener noreferrer\">\r\n                    <img src={instagram} alt=\"instagram\"/>\r\n                </a>\r\n                <a href=\"https://www.linkedin.com/in/luis-amadeo-l-34b152119/\" target='_blank' rel=\"noopener noreferrer\">\r\n                    <img src={linkedin} alt=\"linkedin\"/>  \r\n                </a>   \r\n                \r\n            </section>\r\n        </div>\r\n       \r\n    </header>\r\n)}","import React from 'react';\r\n\r\nexport const Projects = ({ title, tags, description, img, pack, url, github }) => {\r\nreturn (\r\n    <article className='project'>\r\n        <img src={img} alt=\"thumbnail\"/>\r\n        <div>\r\n            <h1> {title} </h1>\r\n            <section>\r\n                {tags.map(e=> \r\n                <p \r\n                style={ \r\n                    e==='react'? {backgroundColor:'rgb(0, 85, 197)'} : \r\n                    e==='express'? {backgroundColor:'rgb(0, 150, 12)'} : \r\n                    e==='sass'? {backgroundColor:'rgb(177, 0, 147)'} :\r\n                    e==='mongoDB'? {backgroundColor:'rgb(0, 17, 255)'} : \r\n                    e==='css'? {backgroundColor:'rgb(252, 122, 0)'} : \r\n                    {backgroundColor:'rgb(0, 0, 0)'}}\r\n                className='tag'> \r\n                    {e} \r\n                </p> \r\n                )}\r\n            </section>\r\n            <section>\r\n                <p style={pack?{display:'block'}:{display:'none'}} className='dep'>packages:</p> \r\n                  { pack? pack.map(e=> <p className='dep'> {e} </p> ): false}\r\n            </section>\r\n            <p className='description'> {description} </p>\r\n        </div>\r\n        <a href={url} className='view online' target='_blank' rel=\"noopener noreferrer\"> view online </a>\r\n        <a style={github?{display:'block'}:{display:'none'}} className='view github' target='_blank' rel=\"noopener noreferrer\" href={github}> view on github </a>\r\n    </article>\r\n)}","import React, {Component} from 'react';\r\nimport {Header} from './header.jsx';\r\nimport {Projects} from './projects.jsx';\r\nimport karate from '../img/karate.png';\r\n\r\nclass FrontPage extends Component {\r\n  \r\n    state = {\r\n      projects: [\r\n        {\r\n          title:'Karate School Webiste',\r\n          tags: ['react', 'express', 'mongoDB', 'sass'],\r\n          packages: ['react-router-dom', '@hapi/joi', 'jwstoken', 'mongoose'],\r\n          description:'App with modern design and backend',\r\n          img:karate,\r\n          url:'https://glacial-refuge-74459.herokuapp.com',\r\n          github:''\r\n        },\r\n        {\r\n          title:'News API',\r\n          tags: ['react', 'css'],\r\n          packages: false,\r\n          description:'Watch news from 30.000 diferent sources and 7 categories',\r\n          img:karate,\r\n          url:'https://luisleopardi.github.io/newsApi/',\r\n          github:'https://github.com/LuisLeopardi/newsApi'\r\n        },\r\n      ]\r\n    }\r\n   \r\n    render(){\r\n      const {projects} = this.state;\r\n      return (\r\n      <>\r\n        <Header/>\r\n        <h1 className='checkOut'> Check out my projects </h1>  \r\n        {\r\n          projects.map(e=> \r\n          <Projects \r\n            title={e.title} \r\n            tags={e.tags} \r\n            description={e.description} \r\n            img={e.img} pack={e.packages} \r\n            url={e.url} github={e.github}\r\n          /> )\r\n        }\r\n      </>\r\n    );\r\n    }\r\n  }\r\n  \r\n  export default FrontPage;","import React from 'react'\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nexport const Navbar = () => {\r\nreturn (\r\n    <>\r\n    <h1 className='logo'> Websites <br/> <i>&amp; apps </i>  </h1>\r\n    <nav className='navbar'>     \r\n        <NavLink to=\"/\"> Projects </NavLink>\r\n        <NavLink to=\"/about\"> About me </NavLink>   \r\n        <p >Order <i>(comming soon)</i>  </p>\r\n    </nav>\r\n    </>\r\n)}","import React from 'react'\r\n\r\nexport const About = () => {\r\n\r\nreturn (\r\n<>\r\n    <section className='about-section'>\r\n        <span style={{backgroundColor:'rgb(0, 89, 255)'}}></span>\r\n        <h1 className='about-headline' style={{color:'rgb(0, 89, 255)'}}> Who am i </h1>\r\n        <p className='about-p'>\r\n            I am a passionate web developer who loves to build elegant websites, I believe that a website must be built in a simple \r\n            yet beautiful that makes it easy to navigate and search for content. Learning new things is very important for a developer; \r\n            especially when technology advances as fast as it is doing it right now, and I am not afraid of learning new ways to improve \r\n            my skills.\r\n        </p>\r\n    </section>\r\n    <section className='about-section'>\r\n        <span style={{backgroundColor:'rgb(255, 0, 85)'}}></span>\r\n        <h1 className='about-headline' style={{color:'rgb(255, 0, 85)'}}> Team work </h1>\r\n        <p className='about-p'>\r\n        One of the things that I like most it's working with talented and smart people because it always makes me draw the best of my skills.\r\n        It's important for me to maintain a good relationship with my colleagues because collaboration and teamwork its the key to finishing\r\n        a project.\r\n        </p>\r\n    </section>\r\n    <section className='about-section'>\r\n        <span style={{backgroundColor:'rgb(135, 0, 245)'}}></span>\r\n        <h1 className='about-headline' style={{color:'rgb(135, 0, 245)'}}> My future </h1>\r\n        <p className='about-p'>\r\n        I see myself knowing many technologies such as python, PHP, SQL, angular, etc. Prioritizing python among everything for\r\n        it's potential for building AI's.\r\n        </p>\r\n    </section>\r\n</>\r\n)}","import React from 'react';\r\n\r\nexport const Footer = () => {\r\nreturn (\r\n    <footer>\r\n        <p> email: supernano1998@gmail.com </p>\r\n    </footer>\r\n)}","import React, {Component} from 'react';\nimport './css/style.css';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport FrontPage from './components/frontPage.jsx';\nimport {Navbar} from './components/navbar.jsx';\nimport {About} from './components/about.jsx';\nimport {Footer} from './components/footer.jsx';\nclass App extends Component {\nrender(){\nreturn (\n<div className='wrap'>\n\n<Navbar/>\n\n<Router>\n  <Switch>\n    <Route exact path=\"/\" exact render={()=> <FrontPage/> } />\n    <Route exact path=\"/\" exact render={()=> <About/> } />\n  </Switch>\n</Router>\n\n<Footer/>\n\n</div>\n)}}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}