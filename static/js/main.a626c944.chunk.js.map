{"version":3,"sources":["img/chatApp.PNG","img/me.png","img/instagram.svg","img/linkedin.svg","img/karate.png","components/header.jsx","components/projects.jsx","components/frontPage.jsx","components/footer.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","src","me","alt","href","target","rel","instagram","linkedin","Projects","title","tags","description","img","pack","url","github","h1Color","map","e","key","Math","random","style","backgroundColor","display","FrontPage","state","projects","packages","karate","chatApp","shop","this","Component","Footer","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a626c944.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/chatApp.077ec8d0.PNG\";","module.exports = __webpack_public_path__ + \"static/media/me.c49b8133.png\";","module.exports = __webpack_public_path__ + \"static/media/instagram.6339a0b9.svg\";","module.exports = __webpack_public_path__ + \"static/media/linkedin.9a1ba7dd.svg\";","module.exports = __webpack_public_path__ + \"static/media/karate.5a7b7a14.png\";","import React from 'react'\r\nimport me from '../img/me.png'\r\nimport instagram from '../img/instagram.svg'\r\nimport linkedin from '../img/linkedin.svg'\r\nexport const Header = () => {\r\nreturn (\r\n\r\n    <>\r\n\r\n    <div className='decoration-wrap'>\r\n        <div className='line'> <p>PORT</p> </div>\r\n        <div className='circle'></div>\r\n        <div className='line'> <p>FOLIO</p> </div>\r\n    </div>\r\n\r\n    <header className='header'>\r\n\r\n        <img src={me} alt=\"me\"/>\r\n        <div>\r\n            <h1> Hi i'm Luis </h1>\r\n            <h2> Full Stack Web Developer </h2>\r\n            <p> Specialized in <h3>React</h3> and <h3>Express</h3>  </p>\r\n\r\n            <section>\r\n                <a href=\"https://www.instagram.com/luisleopardi_nano/\" target='_blank' rel=\"noopener noreferrer\">\r\n                    <img src={instagram} alt=\"instagram\"/>\r\n                </a>\r\n                <a href=\"https://www.linkedin.com/in/luis-amadeo-l-34b152119/\" target='_blank' rel=\"noopener noreferrer\">\r\n                    <img src={linkedin} alt=\"linkedin\"/>  \r\n                </a>   \r\n                \r\n            </section>\r\n        </div>\r\n\r\n        <span>supernano1998@gmail.com</span>   \r\n       \r\n    </header>\r\n\r\n    </>\r\n)}","import React from 'react';\r\n\r\nexport const Projects = ({ title, tags, description, img, pack, url, github, h1Color }) => {\r\nreturn (\r\n    <article className='project'>\r\n        <img src={img} alt=\"thumbnail\"/>\r\n        <div className='projectWrap'>\r\n            <h1> {title} </h1>\r\n            <section>\r\n                {tags.map(e=> \r\n                <p \r\n                key={title + Math.random()*10000}\r\n                style={ \r\n                    e==='react'? {backgroundColor:'rgb(0, 85, 197)'} : \r\n                    e==='express'? {backgroundColor:'rgb(0, 150, 12)'} : \r\n                    e==='sass'? {backgroundColor:'rgb(177, 0, 147)'} :\r\n                    e==='mongoDB'? {backgroundColor:'rgb(0, 17, 255)'} : \r\n                    e==='css'? {backgroundColor:'rgb(252, 122, 0)'} : \r\n                    {backgroundColor:'rgb(0, 0, 0)'}}\r\n                className='tag'> \r\n                    {e} \r\n                </p> \r\n                )}\r\n            </section>\r\n            <section>\r\n                <p style={pack?{display:'block'}:{display:'none'}} className='dep'>packages:</p> \r\n                  { pack? pack.map(e=> <p key={pack + Math.random()*100000} className='dep'> {e} </p> ): false}\r\n            </section>\r\n            <p className='description'> {description} </p>\r\n        </div>\r\n        <div className='projectFooter'>\r\n            <a href={url} className='view online' target='_blank' rel=\"noopener noreferrer\"> view online </a>\r\n            <a style={github?{display:'block'}:{display:'none'}} className='view github' target='_blank' rel=\"noopener noreferrer\" href={github}> view on github </a>\r\n        </div>\r\n    </article>\r\n)}","import React, {Component} from 'react';\r\nimport {Header} from './header.jsx';\r\nimport {Projects} from './projects.jsx';\r\nimport karate from '../img/karate.png';\r\nimport chatApp from '../img/chatApp.PNG';\r\nimport shop from '../img/chatApp.PNG';\r\nclass FrontPage extends Component {\r\n  \r\n    state = {\r\n      projects: [\r\n        {\r\n          title:'Karate School Webiste',\r\n          tags: ['react', 'express', 'mongoDB', 'sass'],\r\n          packages: ['react-router-dom', '@hapi/joi', 'jwstoken', 'mongoose', 'nodemailer'],\r\n          description:'Website with modern design and backend',\r\n          img:karate,\r\n          url:'https://glacial-refuge-74459.herokuapp.com',\r\n          github:'https://github.com/LuisLeopardi/karate'\r\n        },\r\n        {\r\n          title:'Chat App',\r\n          tags: ['react', 'express', 'mongoDB', 'sass'],\r\n          packages: ['react-router-dom', '@hapi/joi', 'jwstoken', 'mongoose', 'socket.io', 'express-session'],\r\n          description:'App with public chat rooms and private messaging',\r\n          img:chatApp,\r\n          url:'https://chatapp-luisleopardi.herokuapp.com',\r\n          github:'https://github.com/LuisLeopardi/chatApp'\r\n        },\r\n        {\r\n          title:'Fictional Shop',\r\n          tags: ['react', 'express', 'mongoDB', 'sass'],\r\n          packages: ['react-router-dom', 'jwstoken', 'mongoose', 'express-session', 'multer'],\r\n          description:'A fictional shop where you can not buy anything... Only admins can upload items',\r\n          img:shop,\r\n          url:'https://fictional-shop.herokuapp.com',\r\n          github:'https://github.com/LuisLeopardi/fictional-shop'\r\n        }\r\n      ]\r\n    }\r\n   \r\n    render(){\r\n      const {projects} = this.state;\r\n      return (\r\n      <>\r\n        <Header/>\r\n        <h1 className='checkOut'> Check out my projects </h1>  \r\n        {\r\n          projects.map(e=> \r\n          <Projects \r\n            key={e.title}\r\n            title={e.title} \r\n            tags={e.tags} \r\n            description={e.description} \r\n            img={e.img} pack={e.packages} \r\n            url={e.url} github={e.github}\r\n          /> )\r\n        }\r\n      </>\r\n    );\r\n    }\r\n  }\r\n  \r\n  export default FrontPage;","import React from 'react';\r\n\r\nexport const Footer = () => {\r\nreturn (\r\n    <footer>\r\n        <p> MORE AT <a rel=\"noopener noreferrer\" target='_blank' href='https://github.com/LuisLeopardi?tab=repositories'>GITHUB</a></p>\r\n    </footer>\r\n)}","import React, {Component} from 'react';\nimport './css/style.css';\nimport FrontPage from './components/frontPage.jsx';\nimport {Footer} from './components/footer.jsx';\nclass App extends Component {\nrender(){\nreturn (\n<div className='wrap'>\n\n<FrontPage/>\n\n<Footer/>\n\n</div>\n)}}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}